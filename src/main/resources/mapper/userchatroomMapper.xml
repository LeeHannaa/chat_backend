<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userchatroomMapper">
    <resultMap id="UserChatRoomMap" type="UserChatRoom">
        <id property="id" column="ucr_id"/>
        <result property="isInRoom" column="ucr_is_in_room"/>
        <result property="entryTime" column="ucr_entry_time"/>
        <result property="regDate" column="ucr_reg_date"/>

        <association property="user" javaType="User">
            <id property="id" column="u_id"/>
            <result property="name" column="u_name"/>
            <result property="fcmToken" column="u_fcm_token"/>
            <result property="regDate" column="u_reg_date"/>
        </association>

        <association property="chatRoom" javaType="ChatRoom">
            <id property="id" column="cr_id"/>
            <result property="name" column="cr_name"/>
            <result property="memberNum" column="cr_member_num"/>
            <result property="isGroup" column="cr_is_group"/>
            <result property="phoneNumber" column="cr_phone_number"/>
            <result property="regDate" column="cr_reg_date"/>
        </association>
    </resultMap>
    <select id="findByUserId" parameterType="Long" resultMap="UserChatRoomMap">
        SELECT
            ucr.id AS ucr_id,
            ucr.is_in_room AS ucr_is_in_room,
            ucr.entry_time AS ucr_entry_time,
            ucr.reg_date AS ucr_reg_date,

            cr.id AS cr_id,
            cr.name AS cr_name,
            cr.member_num AS cr_member_num,
            cr.is_group AS cr_is_group,
            cr.phone_number AS cr_phone_number,
            cr.reg_date AS cr_reg_date,

            u.id AS u_id,
            u.name AS u_name
        FROM user_chat_room ucr
                 JOIN chat_room cr ON ucr.chat_room_id = cr.id
                 JOIN user u ON ucr.user_id = u.id
        WHERE ucr.user_id = #{userId}
    </select>

    <select id="findOpponent" resultMap="UserChatRoomMap" parameterType="map">
        SELECT
            ucr.id AS ucr_id,
            ucr.is_in_room AS ucr_is_in_room,
            ucr.entry_time AS ucr_entry_time,
            ucr.reg_date AS ucr_reg_date,

            u.id AS u_id,
            u.name AS u_name

        FROM user_chat_room ucr
                 JOIN user u ON ucr.user_id = u.id
        WHERE ucr.chat_room_id = #{chatRoomId}
          AND ucr.user_id != #{myId}
            LIMIT 1
    </select>

    <select id="findByUserIdAndChatRoomId" resultMap="UserChatRoomMap" parameterType="map">
        SELECT
            ucr.id AS ucr_id,
            ucr.is_in_room AS ucr_is_in_room,
            ucr.entry_time AS ucr_entry_time,
            ucr.reg_date AS ucr_reg_date,

            cr.id AS cr_id,
            cr.name AS cr_name,
            cr.member_num AS cr_member_num,
            cr.is_group AS cr_is_group,
            cr.phone_number AS cr_phone_number,
            cr.reg_date AS cr_reg_date,

            u.id AS u_id,
            u.name AS u_name
        FROM user_chat_room ucr
                 JOIN chat_room cr ON ucr.chat_room_id = cr.id
                 JOIN user u ON ucr.user_id = u.id
        WHERE ucr.user_id = #{userId} AND ucr.chat_room_id = #{chatRoomId}
    </select>

    <select id="findAllByChatRoomId" parameterType="Long" resultMap="UserChatRoomMap" >
        SELECT
            ucr.id AS ucr_id,
            ucr.is_in_room AS ucr_is_in_room,
            ucr.entry_time AS ucr_entry_time,
            ucr.reg_date AS ucr_reg_date,

            cr.id AS cr_id,
            cr.name AS cr_name,
            cr.member_num AS cr_member_num,
            cr.is_group AS cr_is_group,
            cr.phone_number AS cr_phone_number,
            cr.reg_date AS cr_reg_date,

            u.id AS u_id,
            u.name AS u_name
        FROM user_chat_room ucr
                 JOIN chat_room cr ON ucr.chat_room_id = cr.id
                 JOIN user u ON ucr.user_id = u.id
        WHERE ucr.chat_room_id = #{roomId}
    </select>

    <delete id="deleteByChatRoomId" parameterType="Long">
        delete from user_chat_room where chat_room_id = #{roomId}
    </delete>

    <delete id="deleteById" parameterType="Long">
        delete from user_chat_room where id = #{id}
    </delete>


    <select id="existsByUserAndChatRoom" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM user_chat_room
        WHERE user_id = #{userId}
          AND chat_room_id = #{chatRoomId}
    </select>

    <insert id="save" parameterType="UserChatRoom" useGeneratedKeys="true" keyProperty="id">
        insert into user_chat_room(is_in_room, entry_time, reg_date, user_id, chat_room_id)
        values(#{isInRoom}, #{entryTime}, #{regDate}, #{user.id}, #{chatRoom.id})
    </insert>

    <insert id="saveAll" parameterType="list">
        INSERT INTO user_chat_room (user_id, chat_room_id)
        VALUES
        <foreach collection="list" item="ucr" separator=",">
            (#{ucr.user.id}, #{ucr.chatRoom.id})
        </foreach>
    </insert>
</mapper>