<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="userchatroomMapper">
    <resultMap id="UserChatRoomMap" type="UserChatRoom">
        <id property="idx" column="ucr_idx"/>
        <result property="isInRoom" column="ucr_is_in_room"/>
        <result property="entryTime" column="ucr_entry_time"/>
        <result property="cdate" column="ucr_cdate"/>

        <association property="user" javaType="User">
            <id property="userIdx" column="u_user_idx"/>
            <result property="userId" column="u_user_id"/>
            <result property="cdate" column="u_cdate"/>
        </association>

        <association property="chatRoom" javaType="ChatRoom">
            <id property="idx" column="cr_idx"/>
            <result property="name" column="cr_name"/>
            <result property="memberNum" column="cr_member_num"/>
            <result property="isGroup" column="cr_is_group"/>
            <result property="phoneNumber" column="cr_phone_number"/>
            <result property="cdate" column="cr_cdate"/>
        </association>
    </resultMap>
    <select id="findByUserId" parameterType="Long" resultMap="UserChatRoomMap">
        SELECT
            ucr.idx AS ucr_idx,
            ucr.is_in_room AS ucr_is_in_room,
            ucr.entry_time AS ucr_entry_time,
            ucr.cdate AS ucr_cdate,

            cr.idx AS cr_idx,
            cr.name AS cr_name,
            cr.member_num AS cr_member_num,
            cr.is_group AS cr_is_group,
            cr.phone_number AS cr_phone_number,
            cr.cdate AS cr_cdate,

            u.user_idx AS u_user_idx,
            u.user_id AS u_user_id
        FROM aa_chat_room_user ucr
                 JOIN aa_chat_room cr ON ucr.chat_room_idx = cr.idx
                 JOIN aa_dd_user u ON ucr.user_idx = u.user_idx
        WHERE ucr.user_idx = #{userId}
    </select>

    <select id="findOpponent" resultMap="UserChatRoomMap" parameterType="map">
        SELECT
            ucr.idx AS ucr_idx,
            ucr.is_in_room AS ucr_is_in_room,
            ucr.entry_time AS ucr_entry_time,
            ucr.cdate AS ucr_cdate,

            u.user_idx AS u_user_idx,
            u.user_id AS u_user_id
        FROM aa_chat_room_user ucr
                 JOIN aa_dd_user u ON ucr.user_idx = u.user_idx
        WHERE ucr.chat_room_idx = #{chatRoomId}
          AND ucr.user_idx != #{myId}
            LIMIT 1
    </select>

    <select id="findByUserIdAndChatRoomId" resultMap="UserChatRoomMap" parameterType="map">
        SELECT
            ucr.idx AS ucr_idx,
            ucr.is_in_room AS ucr_is_in_room,
            ucr.entry_time AS ucr_entry_time,
            ucr.cdate AS ucr_cdate,

            cr.idx AS cr_idx,
            cr.name AS cr_name,
            cr.member_num AS cr_member_num,
            cr.is_group AS cr_is_group,
            cr.phone_number AS cr_phone_number,
            cr.cdate AS cr_cdate,

            u.user_idx AS u_user_idx,
            u.user_id AS u_user_id
        FROM aa_chat_room_user ucr
                 JOIN aa_chat_room cr ON ucr.chat_room_idx = cr.idx
                 JOIN aa_dd_user u ON ucr.user_idx = u.user_idx
        WHERE ucr.user_idx = #{userId} AND ucr.chat_room_idx = #{chatRoomId}
    </select>

    <select id="findAllByChatRoomId" parameterType="Long" resultMap="UserChatRoomMap" >
        SELECT
            ucr.idx AS ucr_idx,
            ucr.is_in_room AS ucr_is_in_room,
            ucr.entry_time AS ucr_entry_time,
            ucr.cdate AS ucr_cdate,

            cr.idx AS cr_idx,
            cr.name AS cr_name,
            cr.member_num AS cr_member_num,
            cr.is_group AS cr_is_group,
            cr.phone_number AS cr_phone_number,
            cr.cdate AS cr_cdate,

            u.user_idx AS u_user_idx,
            u.user_id AS u_user_id
        FROM aa_chat_room_user ucr
                 JOIN aa_chat_room cr ON ucr.chat_room_idx = cr.idx
                 JOIN aa_dd_user u ON ucr.user_idx = u.user_idx
        WHERE ucr.chat_room_idx = #{roomId}
    </select>

    <delete id="deleteByChatRoomId" parameterType="Long">
        delete from aa_chat_room_user where chat_room_idx = #{roomId}
    </delete>

    <delete id="deleteById" parameterType="Long">
        delete from aa_chat_room_user where idx = #{id}
    </delete>


    <select id="existsByUserAndChatRoom" resultType="int" parameterType="map">
        SELECT COUNT(*)
        FROM aa_chat_room_user
        WHERE user_idx = #{userId}
          AND chat_room_idx = #{chatRoomId}
    </select>

    <insert id="save" parameterType="UserChatRoom" useGeneratedKeys="true" keyProperty="idx">
        insert into aa_chat_room_user(is_in_room, entry_time, cdate, user_idx, chat_room_idx)
        values(#{isInRoom}, #{entryTime}, #{cdate}, #{user.userIdx}, #{chatRoom.idx})
    </insert>

    <update id="update" parameterType="UserChatRoom">
        UPDATE aa_chat_room_user
        SET is_in_room = #{isInRoom},
            entry_time = #{entryTime},
            cdate = #{cdate}
        WHERE user_idx = #{user.userIdx} AND chat_room_idx = #{chatRoom.idx}
    </update>

    <insert id="saveAll" parameterType="list">
        INSERT INTO aa_chat_room_user (user_idx, chat_room_idx, is_in_room, entry_time, cdate)
        VALUES
        <foreach collection="list" item="ucr" separator=",">
            (#{ucr.user.userIdx}, #{ucr.chatRoom.idx}, #{ucr.isInRoom}, #{ucr.entryTime}, #{ucr.cdate})
        </foreach>
    </insert>
</mapper>